예외처리

프로그램 오류 3종
- 컴파일 에러(compile-time error): 컴파일 할 때 발생하는 에러, 컴파일러가
- 런타임 에러(runtime error): 실행할 때 발생하는 에러,
- 논리적 에러(logical error): 컴파일에러, 런타임에러 에서도 걸리지 않았으나, 의도와 다르게 동작하는 것

java의 런타임 에러
 -> 에러(Error)    프로그램 코드에 의해서 수습될 수 없는 심각한 오류
 -> 예외(Exception)프로그램 코드에 의해서 수습될 수 있는 다소 미약한 오류
에러는 못막더라도 예외는 막아보자, 프로그램 중단을 막기위해

예외처리의 정의와 목적
 -> 정의  프로그램 실행 시 발생할 수 있는 예외의 발생에 대비해서 코드를 작성하는것
 -> 목적  프로그램의 비정상 종료를 막고, 정상적인 실행상태를 유지하는 것

 Exception 클래스들 : 사용자의 실수와 같은 외적인 요인에 의해 발생하는 예외
            (IOException, ClassNotFoundException)
 RuntimeException 클래스들 : 프로그래머의 실수로 발생하는 예외
            (ArithmeticException 산술계산 예외, 0으로나누기
            ClassCassException 형변환 실패
            NullPointerException 참조변수가 가리키는게 null일때
            IndexOutOfBoundsException 배열 범위 벗어남
            등등)

자주나오는 에러
NullPointerException(NPE)
객체 참조가 없는 상태, 즉 null 값을 가지고 있는 참조 변수로 객체 접근 연산자인 도트(.)를 사용했을때 발생합니다.
ArrayIndexOutOfBoundsException
배열을 다룰때 주로 발생하는 예외인데요.
배열에서 할당된 배열의 인덱스 범위를 초과해서 사용할 경우 발생하는 에러입니다.
NumberFormatException
 문자열로 되어있는 데이터를 숫자로 변경하는 경우가 매우 자주 발생하곤 합니다.
ClassCastException
타입 변환(Casting)은 상위 클래스와 하위 클래스간에 발생하고 구현 클래스와 인터페이스 간에도 발생합니다.
타입변환이 실패할 경우 발생하는 에러입니다.
ArithmeticException
어떤 수를 0 으로 나누게 되면 발생하는 Exception입니다.
ClassNotFoundException
실수로 클래스의 이름을 잘못 기재
FileNotFoundException
존재하지 않는 파일의 이름을 입력
InputMismatchException
의도치 않는 입력 오류 시 발생하는 예외